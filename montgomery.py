p = 179769313486231590772930519078902473361797697894230657273430081157732675805500963132708477322407536021120113879871393357658789768814416622492847430639474124377767893424865485276302219601246094119453082952085005768838150682342462881473913110540827237163350510684586298239947245938479716304835356329624224137859
q = 179769313486231590772930519078902473361797697894230657273430081157732675805500963132708477322407536021120113879871393357658789768814416622492847430639474124377767893424865485276302219601246094119453082952085005768838150682342462881473913110540827237163350510684586298239947245938479716304835356329624224138297
n = p * q
r = 2**(32*65)
v = 32514729152050257069561364505416426180942290240347187361756662158234879763035203250275246103412161802624647886251042087150747484421566862733181187251866362649879147707983371155462564698298527012107749251875186749486530325203438155297465154105266964263768485186156204594046026253437157836951076112263853220886504719800175990599721225415792938261319605700707494614134390361074084803123721608673976742536100441904951639044135850958181608972587664587972145883482759868998813699686233101472162633524630877872677807343737138347036345119476588489758281827893008903665385769978096154385743484434530743081492106427316047205734678049917
r_1 = 7570425316703100006459598547177488492089856937608492412082073781228363458773867052578191762653217139333637404779680559213912925781115624758689940732872663682764197631735208247663119039102114507022255391784754290591583197285290377982301906241398994872292616680766503464906948211937481033837207619162242212611791490135989057558034559950466273785693659165465031055333180954328587577284931656154213997155200096090703196408482766923092669244984652491346827763042425288932616607793385760124864254804687929139537745212539669326192690365424655257368069275048427386395564641633415958339458796202644598319262294939966086307442

a = 323170060713110073007148766886699519604441026697154840321303454275246551388678908931972014115229134636887179609218980194941195591504909210950881523864482831206308773673009960917501977503896521067960576383840675682767922186426197561618380943384761704705816458520363050428875758915410658086075523991239303858318366298399316049132171896785924335705954072049799751974712655752621592813921207549396734966947692171370199326167440059613519125883559030820726680356866776584989739491789168260701836942751975854067935519752066434120177736267590062992417277387755942051598825153232
b = 323170060713110073007148766886699519604441026697154840321303454275246551388678908931972014115229134636887179609218980194941195591504909210950881523864482831206308773673009960917501977503896521067960576383840675682767922186426197561618380943384761704705816458520363050428875758915410658086075523991239303858318366298399316049132171896785924335705954072049799751974712655752621592813921207549396734966947692171370199326167440059613519125883559030820726680356866776584989739491789168260701836942751975854067935519752066434120177736267590062992417277387755583275916356136911
r2 = (r**2) % n

# print("p =",hex(p))
# print("q =",hex(q))
# print("p*q=n =",hex(n))
#print("r =",hex(r))
# print("v =",hex(v))
# print("r_1 =",hex(r_1))
# print("a =",hex(a))
# print("b =",hex(b))
#print("r2 =",hex(r2))

def montgomery_mult(a,b):
    s = a*b
    t = (s*v) % r
    m = (s+(t*n))
    u = m//r
    if u >= n:
        result = u-n
    else:
        result = u
    return result

def nombre_en_tableau_binaire(nombre):
    # Convertir le nombre en binaire et enlever le préfixe '0b'
    binaire = bin(nombre)[2:]
    # Convertir chaque caractère de la chaîne en entier et retourner sous forme de liste
    tableau_binaire = [int(chiffre) for chiffre in binaire]
    return tableau_binaire

def square_and_multiply(a, k):
    tab = nombre_en_tableau_binaire(k)
    p = r-n
    a = montgomery_mult(a, r2)
    i = k.bit_length() - 1
    print(i)
    while i >= 0:
        p = montgomery_mult(p, p)
        if tab[i] == 1:
            p = montgomery_mult(p, a)
        i-=1
    return montgomery_mult(p, 1)

print(hex(square_and_multiply(a, b)))